---
# Handle plugins
# If Jenkins is installed or updated, wait for pulling the Jenkins CLI
- name: "{{ startup_delay_s | default(60) }}s delay while starting Jenkins"
  wait_for: port=8080 delay={{ startup_delay_s | default(60) }}

# Create Jenkins CLI destination directory
- name: "Create Jenkins CLI destination directory: ${jenkins.dest}"
  sudo: yes
  action: file path={{ jenkins_dest }} state=directory

# Get Jenkins CLI from localhost
- name: Get Jenkins CLI
  sudo: yes
  action: get_url url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_dest }} mode=0440

# Get latest Jenkins update file
#- name: Get Jenkins updates
#  sudo: yes
#  action: get_url url=http://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440
#  register: jenkins_updates

- name: Disable Jenkins Authentication before installing plugins
  sudo: yes
  copy:
    src: config.xml-no-auth
    dest: "/var/lib/jenkins/config.xml"
    owner: "jenkins"
    group: "jenkins"
    mode: 0644
    force: yes
    backup: yes
  register: config_xml

- replace:
    path: /etc/default/jenkins
    regexp: '(\s+)8081(\s+.*)?$'
    replace: '\18080\2'
    backup: yes

- name: Restart Jenkins process to pick new config.xml settings
  sudo: yes
  command: service jenkins restart
  when: config_xml.changed
  notify: 
    - 'Restart Jenkins'

- name: "{{ startup_delay_s | default(60) }}s delay while starting Jenkins"
  wait_for: port=8080 delay={{ startup_delay_s | default(60) }}

# Jenkins Update-center
#- name: Update-center Jenkins
#  sudo: yes
#  action: "shell cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack"
#  when: jenkins_updates.changed
#  notify:
#    - 'Safe Restart Jenkins'
